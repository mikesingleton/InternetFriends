{"version":3,"sources":["scripts/inject.js"],"names":["Inject","getView","id","_views","src","chrome","extension","getURL","Date","getTime","iframe","$","ID","IFRAME_PREFIX","scrolling","Logger","log","isLoaded","_container","append","onMessage","request","event","message_onLoaded","onDisconnect","remove","document","removeEventListener","dom_onScroll","dom_onMousemove","dom_onMouseleave","dom_onKeydown","dom_onKeyup","dom_onVisibilityChange","_portManager","isPageHidden","hidden","msHidden","webkitHidden","data","scrollX","window","scrollY","tell","x","pageX","y","pageY","key","which","keyCode","activeElement","body","_enterDown","preventDefault","CONTAINER","_this","init","appendTo","portManager","addEventListener","isWebRTCSupported","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","RTCPeerConnection"],"mappings":"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","file":"inject.js","sourcesContent":["\"use strict\";\n\nvar Inject = function () {\n  // constants ----------------------------------------------------------------\n  var ID = {\n    CONTAINER: 'internetFriends-container',\n    IFRAME_PREFIX: 'internetFriends-iframe-'\n  }; // variables ----------------------------------------------------------------\n\n  var _this = {},\n      _views = {},\n      _container = null,\n      _portManager = null,\n      _enterDown = false; // initialize ---------------------------------------------------------------\n\n  _this.init = function () {\n    // create the main container\n    _container = $('<div />', {\n      id: ID.CONTAINER\n    });\n\n    _container.appendTo(document.body); // add the \"chat\" iframe\n\n\n    getView('chat', _container); // setup port manager to communicate with background.js\n\n    _portManager = new portManager(\"main\", onMessage, onDisconnect);\n\n    _portManager.tell(\"tabInit\"); // send initial scroll value\n    // add event listeners\n\n\n    document.addEventListener(\"scroll\", dom_onScroll, false);\n    document.addEventListener(\"mousemove\", dom_onMousemove, false);\n    document.addEventListener(\"mouseleave\", dom_onMouseleave, false);\n    document.addEventListener(\"keydown\", dom_onKeydown, false);\n    document.addEventListener(\"keyup\", dom_onKeyup, false);\n    document.addEventListener(\"webkitvisibilitychange\", dom_onVisibilityChange, false);\n    document.addEventListener(\"msvisibilitychange\", dom_onVisibilityChange, false);\n  }; // private functions --------------------------------------------------------\n\n\n  function getView(id) {\n    // return the view if it's already created\n    if (_views[id]) return _views[id]; // iframe initial details\n\n    var src = chrome && chrome.extension ? chrome.extension.getURL('html/iframe/' + id + '.html?view=' + id + '&_' + new Date().getTime()) : './html/iframe/chat.html',\n        iframe = $('<iframe />', {\n      id: ID.IFRAME_PREFIX + id,\n      src: src,\n      scrolling: false\n    });\n    Logger.log(src, iframe); // view\n\n    _views[id] = {\n      isLoaded: false,\n      iframe: iframe\n    }; // add to the container\n\n    _container.append(iframe);\n\n    return _views[id];\n  }\n\n  ; // messages coming from \"background.js\"\n\n  function onMessage(request) {\n    Logger.log(request);\n\n    switch (request.event) {\n      case 'loaded':\n        message_onLoaded();\n        break;\n    }\n  }\n\n  ;\n\n  function onDisconnect() {\n    Logger.log(\"disconnected\"); // remove related elements\n\n    getView('chat', _container).iframe.remove();\n\n    _container.remove(); // remove event listeners\n\n\n    document.removeEventListener(\"scroll\", dom_onScroll, false);\n    document.removeEventListener(\"mousemove\", dom_onMousemove, false);\n    document.removeEventListener(\"mouseleave\", dom_onMouseleave, false);\n    document.removeEventListener(\"keydown\", dom_onKeydown, false);\n    document.removeEventListener(\"keyup\", dom_onKeyup, false);\n    document.removeEventListener(\"webkitvisibilitychange\", dom_onVisibilityChange, false);\n    document.removeEventListener(\"msvisibilitychange\", dom_onVisibilityChange, false);\n    _portManager = null;\n  }\n\n  ;\n\n  function isPageHidden() {\n    return document.hidden || document.msHidden || document.webkitHidden;\n  } // messages -----------------------------------------------------------------\n\n\n  function message_onLoaded() {\n    var data = {\n      scrollX: window.scrollX,\n      scrollY: window.scrollY\n    };\n    if (_portManager) _portManager.tell(\"scroll\", data);\n  } // events -------------------------------------------------------------------\n\n\n  function dom_onScroll() {\n    var data = {\n      scrollX: window.scrollX,\n      scrollY: window.scrollY\n    };\n\n    _portManager.tell(\"scroll\", data);\n  }\n\n  ;\n\n  function dom_onMousemove(event) {\n    var data = {\n      x: event.pageX,\n      y: event.pageY\n    };\n\n    _portManager.tell(\"mousemove\", data);\n  }\n\n  ;\n\n  function dom_onMouseleave(event) {\n    _portManager.tell(\"mouseleave\");\n  }\n\n  ;\n\n  function dom_onKeydown(event) {\n    var key = event.which || event.keyCode;\n\n    if (key === 13 && document.activeElement == document.body) {\n      _enterDown = true;\n      event.preventDefault();\n    }\n  }\n\n  ;\n\n  function dom_onKeyup(event) {\n    var key = event.which || event.keyCode;\n\n    if (key === 13 && _enterDown) {\n      Logger.log('hey');\n\n      _portManager.tell(\"enterpressed\");\n\n      _enterDown = false;\n      event.preventDefault();\n    }\n  }\n\n  ;\n\n  function dom_onVisibilityChange(event) {\n    if (isPageHidden()) {\n      _portManager.tell(\"pageHidden\");\n    } else {\n      _portManager.tell(\"pageVisible\");\n    }\n  }\n\n  return _this;\n}();\n\nvar isWebRTCSupported = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia || window.RTCPeerConnection;\nif (isWebRTCSupported) document.addEventListener(\"DOMContentLoaded\", function () {\n  Inject.init();\n}, false);else Logger.log(\"InternetFriends does not work without WebRTC support!\");"]}